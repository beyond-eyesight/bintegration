name: CD - Deploy

on:
   workflow_dispatch:
     inputs:
       name:
         description: 'service name'
         required: true
         default: ''
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 1.11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Grant execute permission for gradlew
        run: chmod +x ${{ github.event.inputs.name }}/gradlew
      - name: Build with Gradle
        run: ./${{ github.event.inputs.name }}/gradlew build
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACESS_TOKEN }}
      - name: Push Docker image to Docker Hub
        uses: docker/build-push-action@v2
        id: docker_build
        with:
          context: ./${{ github.event.inputs.name }}
          file: ./${{ github.event.inputs.name }}/Dockerfile
          tags: beyondeyesight/${{ github.event.inputs.name }}:latest
          push: true
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ github.event.inputs.name }}/task-definition.json
          container-name: ${{ github.event.inputs.name }}
          image: beyondeyesight/${{ github.event.inputs.name }}@${{ steps.docker_build.outputs.digest }}
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ github.event.inputs.name }}-service
          cluster: beyondeyesight2
          wait-for-service-stability: true
