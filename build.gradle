plugins {
    id 'org.springframework.boot' version '2.3.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id "com.palantir.docker" version "0.22.1"
    id "com.palantir.docker-run" version "0.22.1"
}

group = 'beyondeyesight'
version = '0.0.1'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "Hoxton.SR8")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-websocket'
    compile 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    compile 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix'
    compile 'org.springframework.boot:spring-boot-starter-data-cassandra'
    compile 'org.springframework.security:spring-security-rsa'
    compile 'it.ozimov:embedded-redis:0.7.2'
    compile 'org.springframework.cloud:spring-cloud-config-client'
    compile 'org.springframework.boot:spring-boot-starter-data-redis'
    compile group: 'org.hectorclient', name: 'hector-core', version: '2.0-0'
    compile 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    //todo: 왜 다른 의존성에 안딸아오는지 체크
    compile group: 'com.google.guava', name: 'guava', version: '19.0'
    compile group: 'com.datastax.cassandra', name: 'cassandra-driver-core', version: '4.0.0', ext: 'pom'
    compile group: 'org.webjars', name: 'stomp-websocket', version: '2.3.3-1'
    compile group: 'org.webjars', name: 'sockjs-client', version: '1.1.2'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile('org.cassandraunit:cassandra-unit-spring:4.3.1.0')
    testImplementation 'org.mockito:mockito-core'
}


dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}

docker {
    name "${project.group}/${project.name}:${project.version}"
    //todo: 하드 코딩을 지우고 싶다.
    files "src/main/docker/run.sh"
    copySpec.from("build/libs").into("output")
    dockerfile project.file('src/main/docker/Dockerfile')
    tag 'DockerHub', "${project.group}/${project.name}:${project.version}"
}

dockerRun {
    name "${project.name}"
    image "${project.group}/${project.name}:${project.version}"
    ports '8080:8080'
    clean true
}
