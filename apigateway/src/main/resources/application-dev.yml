spring:
  config:
    #    다른 서비스들도 연동하기
    import: fellowship/dev.yml
  cloud:
    config:
      discovery:
        enabled: true
      label: develop
      fail-fast: true

    gateway:
      discovery:
        locator:
          enabled: true
      routes:
        # SockJS route
        - id: access_route
          uri: lb://ACCESS
          predicates:
            - Path=/access/**
          filters:
            - RewritePath=/access/(?<remaining>.*), /$\{remaining}
        - id: area_route
          uri: lb://AREA
          predicates:
            - Path=/area/**
          filters:
            - RewritePath=/area/(?<remaining>.*), /$\{remaining}

        - id: fellowship_http_route
          uri: lb://FELLOWSHIP
          # todo: sockjs로 테스트 해보기
          predicates:
            - Path=/fellowship/**
          filters:
            - RewritePath=/fellowship/(?<remaining>.*), /$\{remaining}
        # Normal Websocket route
        - id: fellowship_websocket_route
          uri: lb:ws://FELLOWSHIP
          predicates:
            - Path=/fellowship/**
          filters:
            - RewritePath=/fellowship/(?<remaining>.*), /$\{remaining}
        - id: config_route
          uri: lb://CONFIGSERVER
          predicates:
            - Path=/config/**
          filters:
            - RewritePath=/config/(?<remaining>.*), /$\{remaining}

eureka:
  instance:
    prefer-ip-address: true # 서비스 이름 대신 서비스 IP 주소 등록
  client:
    register-with-eureka: true # 유레카에 서비스 등록
    fetch-registry: true # 유레카 클라이언트가 레지스트리의 복사본을 가져오도롱 지정. true로 설정 시 검색할 때마다 유레카 서비스를 호출하는 대신 레지스트리가 로컬로 캐시된다. 30초마다 클라이언트는 유레카 서비스에 레지스트리 변경 사항 여부를 재확인한다.
    service-url:
      defaultZone: http://52.79.96.126:8761/eureka
