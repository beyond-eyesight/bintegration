spring:
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
      routes:
        # SockJS route
        - id: access_route
          uri: lb://ACCESS
          predicates:
            - Path=/signIn/**
        - id: area_route
          uri: lb://AREA
          predicates:
            - Path=/area/**

        - id: websocket_sockjs_route
          uri: lb://FELLOWSHIP
          # todo: sockjs로 테스트 해보기
          predicates:
            - Path=/ws-stomp/**
        # Normal Websocket route
        - id: websocket_route
          uri: lb:ws://FELLOWSHIP
          predicates:
            - Path=/ws-stomp/**
        - id: chat_route
          uri: lb://FELLOWSHIP
          predicates:
            - Path=/chat/**

        - id: config_route
          uri: lb://CONFIG
          predicates:
            - Path=/config/**


eureka:
  instance:
    prefer-ip-address: true # 서비스 이름 대신 서비스 IP 주소 등록
  client:
    register-with-eureka: true # 유레카에 서비스 등록
    fetch-registry: true # 유레카 클라이언트가 레지스트리의 복사본을 가져오도록 지정. true로 설정 시 검색할 때마다 유레카 서비스를 호출하는 대신 레지스트리가 로컬로 캐시된다. 30초마다 클라이언트는 유레카 서비스에 레지스트리 변경 사항 여부를 재확인한다.
    service-url:
      defaultZone: http://localhost:8761/eureka
